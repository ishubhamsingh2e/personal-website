# Generated by Django 4.1.7 on 2023-02-18 09:04

from django.db import migrations, models
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0005_auto_20220424_2025'),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('time', models.DateField()),
                ('technology', models.CharField(max_length=300)),
                ('categories', models.CharField(max_length=300)),
                ('description_small', models.TextField(max_length=150)),
                ('project_url', models.URLField()),
                ('hero_image', models.URLField()),
                ('description_left', models.TextField()),
                ('description_right', models.TextField()),
                ('portrait', models.URLField()),
                ('landscape_top', models.URLField()),
                ('landscape_bottom', models.URLField()),
                ('conclusion_left', models.TextField()),
                ('conclusion_right', models.TextField()),
                ('video', models.URLField()),
                ('next_id', models.IntegerField(null=True)),
                ('next_name', models.CharField(max_length=150, null=True)),
                ('sort_1', models.CharField(choices=[('sorting-ui-ux', 'UI'), ('sorting-ml', 'ML'), ('sorting-development', 'DEV'), ('sorting-research', 'RE')], max_length=50)),
                ('sort_2', models.CharField(choices=[('sorting-ui-ux', 'UI'), ('sorting-ml', 'ML'), ('sorting-development', 'DEV'), ('sorting-research', 'RE')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill', models.CharField(max_length=50)),
                ('level', models.IntegerField()),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='StoryEducation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.CharField(max_length=200)),
                ('title', models.CharField(max_length=300)),
                ('description', models.TextField()),
                ('syear', models.IntegerField()),
                ('eyear', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='StoryExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.CharField(max_length=200)),
                ('title', models.CharField(max_length=300)),
                ('description', models.TextField()),
                ('syear', models.DateField()),
                ('eyear', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='AdminData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField()),
                ('cvLink', models.TextField()),
                ('userName', models.TextField(max_length=50)),
                ('email', models.CharField(max_length=50)),
                ('github', models.CharField(max_length=100)),
                ('dev', models.CharField(max_length=100)),
                ('linkedin', models.CharField(max_length=100)),
                ('blog_category', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
    ]
